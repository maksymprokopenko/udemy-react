{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardListComponent","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","event","setState","searchValue","target","value","state","this","fetchMonsters","fetch","then","data","json","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAKaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA2BF,EAAMG,QAAQC,GAAzC,iBAA6DC,IAAI,UACzE,6BAAML,EAAMG,QAAQG,OACpB,4BAAKN,EAAMG,QAAQI,YCFlBC,G,MAAoB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChC,OACI,yBAASR,UAAU,YAAnB,SACMQ,EAASC,KAAI,SAACP,GACZ,OAAO,cAAC,EAAD,CAAMA,QAAUA,GAAgBA,EAAQC,WCPlDO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAcA,EACdG,SAAWF,MCyCRG,G,MA5Cf,kDACI,aAAe,IAAD,8BACV,gBAkBJH,aAAe,SAACI,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAjB1C,EAAKC,MAAQ,CACTH,YAAa,GACbV,SAAU,IALJ,EADlB,qDAUI,WACEc,KAAKC,kBAXX,2BAcI,WAAiB,IAAD,OACZC,MAAM,8CACDC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACjB,GAAD,OAAc,EAAKS,SAAS,CAAET,kBAjBhD,oBAwBI,WACI,MAAkCc,KAAKD,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAmBpB,EAASqB,QAAO,SAAC3B,GACtC,OAAOA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAG3D,OACI,sBAAK9B,UAAU,MAAf,UACI,qBAAKA,UAAU,cAAf,SACI,cAAC,EAAD,CACIW,YAAY,kBACZC,aAAeU,KAAKV,iBAG5B,cAAC,EAAD,CAAmBJ,SAAWoB,WAtC9C,GAAyBI,cCIVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bc35430b.chunk.js","sourcesContent":["import React from 'react';\n\n// styles\nimport './card.styles.css';\n\nexport const Card = (props) => {\n    return (\n        <div className=\"card-container\">\n            <img src={ `https://robohash.org/${props.monster.id}.png?set=set1` } alt=\"robot\" />\n            <h1>{ props.monster.name }</h1>\n            <p>{ props.monster.email }</p>\n        </div>\n    );\n};\n","import React from 'react';\n\n// components\nimport { Card } from '../card/card.component';\n\n// styles\nimport './card-list.styles.css';\n\nexport const CardListComponent = ({ monsters }) => {\n    return (\n        <section className=\"card-list\">\n            { monsters.map((monster) => {\n                return <Card monster={ monster } key={ monster.id }></Card>\n            }) }\n        </section>\n    );\n};\n","import React from 'react';\n\n// styles\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n    return (\n        <input\n            className=\"search\"\n            type=\"search\"\n            placeholder={ placeholder }\n            onChange={ handleChange }\n        />\n    );\n};\n","import React, { Component } from 'react';\n\n// components\nimport { CardListComponent, SearchBox } from './components';\n\n// styles\nimport './App.css';\n\nexport class App extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            searchValue: '',\n            monsters: [],\n        };\n    }\n\n    componentDidMount() {\n      this.fetchMonsters();\n    }\n\n    fetchMonsters() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then((data) => data.json())\n            .then((monsters) => this.setState({ monsters }));\n    }\n\n    handleChange = (event) => {\n        this.setState({ searchValue: event.target.value });\n    }\n\n    render() {\n        const { monsters, searchValue } = this.state;\n        const filteredMonsters = monsters.filter((monster) => {\n            return monster.name.toLowerCase().includes(searchValue.toLowerCase());\n        });\n\n        return (\n            <div className=\"app\">\n                <div className=\"app__search\">\n                    <SearchBox\n                        placeholder=\"search monsters\"\n                        handleChange={ this.handleChange }\n                    />\n                </div>\n                <CardListComponent monsters={ filteredMonsters }></CardListComponent>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// styles\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}